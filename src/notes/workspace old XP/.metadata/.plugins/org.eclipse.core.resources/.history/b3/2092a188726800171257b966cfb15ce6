package demo;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.concurrent.TimeUnit;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;


public class loopload {

public static void main(String[] args) throws IOException, InterruptedException{

FileInputStream file = new FileInputStream(new File("D:\\Book1.xlsx"));
WebDriver driver;
System.setProperty("org.apache.commons.logging.Log", "org.apache.commons.logging.impl.Jdk14Logger");


System.setProperty("webdriver.chrome.driver","D:\\chromedriver.exe");
driver=new ChromeDriver();
//driver.get("http://www.gmail.com");

/*//Get the workbook instance for XLS file
XSSFWorkbook workbook = new XSSFWorkbook(file);

//Get first sheet from the workbook
XSSFSheet sheet = workbook.getSheetAt(0);
int u = sheet.getLastRowNum();

//Iterate through each rows from first sheet
Iterator<Row> rowIterator = sheet.iterator();

while(rowIterator.hasNext()) {

Row row = rowIterator.next();

//For each row, iterate through each columns
Iterator<Cell> cellIterator = row.cellIterator();
while(cellIterator.hasNext()) {

//Cell cell = cellIterator.next();
	
			*/

//Create the input stream for Excel file 


//Create the XSSF workbook and sheet object/variables
XSSFWorkbook wrkbook = new XSSFWorkbook(file);
XSSFSheet currentSheet = wrkbook.getSheet("login");


//Get the Last ROW and Column number  
int lastRow = currentSheet.getLastRowNum();
XSSFRow  titleRow = currentSheet.getRow(0);
int lastCol = titleRow.getLastCellNum();
//Create an Object variable with size as Number of rows and 2 columns and HashMap for storing excel data

//Here we are storing the test case name in first index and row data as HashMap in second index   
Object[][] data = new Object[lastRow][2];
HashMap<String, String> rowdata = new HashMap<String, String>();

//Iterate the through the rows and columns to fetch the data   
for(int row=1; row<=lastRow; row++){
 XSSFRow currentRow = currentSheet.getRow(row);
 Cell firstCell = currentRow.getCell(0);
 
 for(int col=0; col<lastCol-1; col++){
  rowdata.put(titleRow.getCell(col+1).getStringCellValue(), currentRow.getCell(col+1).getStringCellValue());
 }
 data[row-1][0] = firstCell.getStringCellValue();
 data[row-1][1] = rowdata.clone();
 rowdata.clear();
}
System.out.printf(" reading data....");
for (int i=0;i<=5;i++){
Row ro = currentSheet.getRow(i);

driver.get("https://accounts.google.com/signin/v2/identifier?continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&service=mail&sacu=1&rip=1&flowName=GlifWebSignIn&flowEntry=ServiceLogin");
driver.findElement(By.xpath(".//*[@id='identifierId']")).sendKeys(ro.getCell(0).getStringCellValue());
driver.findElement(By.xpath(".//*[@id='identifierNext']/content/span")).click();
driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
driver.findElement(By.xpath(".//*[@id='password']/div[1]/div/div[1]/input")).sendKeys(ro.getCell(1).getStringCellValue());
driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
driver.findElement(By.xpath(".//*[@id='passwordNext']/content/span")).click();
driver.findElement(By.xpath(".//*[@id='gb']/div[1]/div[1]/div[2]/div[4]/div[1]/a/span")).click();
driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
driver.findElement(By.xpath(".//*[@id='gb_71']")).click();
Thread.sleep(1000);

System.out.println("Done");
}}}